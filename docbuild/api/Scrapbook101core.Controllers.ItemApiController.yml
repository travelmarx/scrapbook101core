### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Controllers.ItemApiController
  commentId: T:Scrapbook101core.Controllers.ItemApiController
  id: ItemApiController
  parent: Scrapbook101core.Controllers
  children:
  - Scrapbook101core.Controllers.ItemApiController.Delete(System.Int32)
  - Scrapbook101core.Controllers.ItemApiController.Get(System.Int32)
  - Scrapbook101core.Controllers.ItemApiController.GetAsync
  - Scrapbook101core.Controllers.ItemApiController.Post(System.String)
  - Scrapbook101core.Controllers.ItemApiController.Put(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: ItemApiController
  nameWithType: ItemApiController
  fullName: Scrapbook101core.Controllers.ItemApiController
  type: Class
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: ItemApiController
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 8
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: 'public class ItemApiController : ControllerBase'
    content.vb: >-
      Public Class ItemApiController
          Inherits ControllerBase
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Controllers.ItemApiController.GetAsync
  commentId: M:Scrapbook101core.Controllers.ItemApiController.GetAsync
  id: GetAsync
  parent: Scrapbook101core.Controllers.ItemApiController
  langs:
  - csharp
  - vb
  name: GetAsync()
  nameWithType: ItemApiController.GetAsync()
  fullName: Scrapbook101core.Controllers.ItemApiController.GetAsync()
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: GetAsync
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 14
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult<IEnumerable<Item>>> GetAsync()
    return:
      type: System.Threading.Tasks.Task{ActionResult{System.Collections.Generic.IEnumerable{Scrapbook101core.Models.Item}}}
    content.vb: Public Function GetAsync As Task(Of ActionResult(Of IEnumerable(Of Item)))
  overload: Scrapbook101core.Controllers.ItemApiController.GetAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemApiController.Get(System.Int32)
  commentId: M:Scrapbook101core.Controllers.ItemApiController.Get(System.Int32)
  id: Get(System.Int32)
  parent: Scrapbook101core.Controllers.ItemApiController
  langs:
  - csharp
  - vb
  name: Get(Int32)
  nameWithType: ItemApiController.Get(Int32)
  fullName: Scrapbook101core.Controllers.ItemApiController.Get(System.Int32)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Get
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 24
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public string Get(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function Get(id As Integer) As String
  overload: Scrapbook101core.Controllers.ItemApiController.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemApiController.Post(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemApiController.Post(System.String)
  id: Post(System.String)
  parent: Scrapbook101core.Controllers.ItemApiController
  langs:
  - csharp
  - vb
  name: Post(String)
  nameWithType: ItemApiController.Post(String)
  fullName: Scrapbook101core.Controllers.ItemApiController.Post(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Post
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 31
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public void Post(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub Post(value As String)
  overload: Scrapbook101core.Controllers.ItemApiController.Post*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemApiController.Put(System.Int32,System.String)
  commentId: M:Scrapbook101core.Controllers.ItemApiController.Put(System.Int32,System.String)
  id: Put(System.Int32,System.String)
  parent: Scrapbook101core.Controllers.ItemApiController
  langs:
  - csharp
  - vb
  name: Put(Int32, String)
  nameWithType: ItemApiController.Put(Int32, String)
  fullName: Scrapbook101core.Controllers.ItemApiController.Put(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Put
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 37
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public void Put(int id, string value)
    parameters:
    - id: id
      type: System.Int32
    - id: value
      type: System.String
    content.vb: Public Sub Put(id As Integer, value As String)
  overload: Scrapbook101core.Controllers.ItemApiController.Put*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemApiController.Delete(System.Int32)
  commentId: M:Scrapbook101core.Controllers.ItemApiController.Delete(System.Int32)
  id: Delete(System.Int32)
  parent: Scrapbook101core.Controllers.ItemApiController
  langs:
  - csharp
  - vb
  name: Delete(Int32)
  nameWithType: ItemApiController.Delete(Int32)
  fullName: Scrapbook101core.Controllers.ItemApiController.Delete(System.Int32)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemApiController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Delete
    path: ../Scrapbook101core/Controllers/ItemApiController.cs
    startLine: 43
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public void Delete(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Public Sub Delete(id As Integer)
  overload: Scrapbook101core.Controllers.ItemApiController.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Controllers
  commentId: N:Scrapbook101core.Controllers
  name: Scrapbook101core.Controllers
  nameWithType: Scrapbook101core.Controllers
  fullName: Scrapbook101core.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Scrapbook101core.Controllers.ItemApiController.GetAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemApiController.GetAsync
  name: GetAsync
  nameWithType: ItemApiController.GetAsync
  fullName: Scrapbook101core.Controllers.ItemApiController.GetAsync
- uid: System.Threading.Tasks.Task{ActionResult{System.Collections.Generic.IEnumerable{Scrapbook101core.Models.Item}}}
  commentId: T:System.Threading.Tasks.Task{ActionResult{System.Collections.Generic.IEnumerable{Scrapbook101core.Models.Item}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionResult<IEnumerable<Item>>>
  nameWithType: Task<ActionResult<IEnumerable<Item>>>
  fullName: System.Threading.Tasks.Task<ActionResult<System.Collections.Generic.IEnumerable<Scrapbook101core.Models.Item>>>
  nameWithType.vb: Task(Of ActionResult(Of IEnumerable(Of Item)))
  fullName.vb: System.Threading.Tasks.Task(Of ActionResult(Of System.Collections.Generic.IEnumerable(Of Scrapbook101core.Models.Item)))
  name.vb: Task(Of ActionResult(Of IEnumerable(Of Item)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.Item
    name: Item
    nameWithType: Item
    fullName: Scrapbook101core.Models.Item
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.Item
    name: Item
    nameWithType: Item
    fullName: Scrapbook101core.Models.Item
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Scrapbook101core.Controllers.ItemApiController.Get*
  commentId: Overload:Scrapbook101core.Controllers.ItemApiController.Get
  name: Get
  nameWithType: ItemApiController.Get
  fullName: Scrapbook101core.Controllers.ItemApiController.Get
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Scrapbook101core.Controllers.ItemApiController.Post*
  commentId: Overload:Scrapbook101core.Controllers.ItemApiController.Post
  name: Post
  nameWithType: ItemApiController.Post
  fullName: Scrapbook101core.Controllers.ItemApiController.Post
- uid: Scrapbook101core.Controllers.ItemApiController.Put*
  commentId: Overload:Scrapbook101core.Controllers.ItemApiController.Put
  name: Put
  nameWithType: ItemApiController.Put
  fullName: Scrapbook101core.Controllers.ItemApiController.Put
- uid: Scrapbook101core.Controllers.ItemApiController.Delete*
  commentId: Overload:Scrapbook101core.Controllers.ItemApiController.Delete
  name: Delete
  nameWithType: ItemApiController.Delete
  fullName: Scrapbook101core.Controllers.ItemApiController.Delete
