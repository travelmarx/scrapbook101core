### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Models.Category
  commentId: T:Scrapbook101core.Models.Category
  id: Category
  parent: Scrapbook101core.Models
  children:
  - Scrapbook101core.Models.Category.Categories
  - Scrapbook101core.Models.Category.Id
  - Scrapbook101core.Models.Category.Type
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: Category
  fullName: Scrapbook101core.Models.Category
  type: Class
  source:
    remote:
      path: Scrapbook101core/Models/Category.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Category
    path: ../Scrapbook101core/Models/Category.cs
    startLine: 13
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  summary: "\nDefines the categories in Scrapbook101core.\n"
  remarks: "\nThe list of categories is read in from one document stored in the database and identified by\nan <xref href=\"Scrapbook101core.Models.Category.Id\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Scrapbook101core.Models.Category.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class Category : object'
    content.vb: >-
      Public Class Category
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Models.Category.Id
  commentId: P:Scrapbook101core.Models.Category.Id
  id: Id
  parent: Scrapbook101core.Models.Category
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Category.Id
  fullName: Scrapbook101core.Models.Category.Id
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/Category.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Id
    path: ../Scrapbook101core/Models/Category.cs
    startLine: 15
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Scrapbook101core.Models.Category.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.Category.Type
  commentId: P:Scrapbook101core.Models.Category.Type
  id: Type
  parent: Scrapbook101core.Models.Category
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Category.Type
  fullName: Scrapbook101core.Models.Category.Type
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/Category.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Type
    path: ../Scrapbook101core/Models/Category.cs
    startLine: 19
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Scrapbook101core.Models.Category.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.Category.Categories
  commentId: P:Scrapbook101core.Models.Category.Categories
  id: Categories
  parent: Scrapbook101core.Models.Category
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: Category.Categories
  fullName: Scrapbook101core.Models.Category.Categories
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/Category.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Categories
    path: ../Scrapbook101core/Models/Category.cs
    startLine: 23
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<CategoryItem> Categories { get; set; }
    parameters: []
    return:
      type: List{Scrapbook101core.Models.CategoryItem}
    content.vb: Public Property Categories As List(Of CategoryItem)
  overload: Scrapbook101core.Models.Category.Categories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Models.Category.Id
  commentId: P:Scrapbook101core.Models.Category.Id
  isExternal: true
- uid: Scrapbook101core.Models.Category.Type
  commentId: P:Scrapbook101core.Models.Category.Type
  isExternal: true
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Scrapbook101core.Models.Category.Id*
  commentId: Overload:Scrapbook101core.Models.Category.Id
  name: Id
  nameWithType: Category.Id
  fullName: Scrapbook101core.Models.Category.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Scrapbook101core.Models.Category.Type*
  commentId: Overload:Scrapbook101core.Models.Category.Type
  name: Type
  nameWithType: Category.Type
  fullName: Scrapbook101core.Models.Category.Type
- uid: Scrapbook101core.Models.Category.Categories*
  commentId: Overload:Scrapbook101core.Models.Category.Categories
  name: Categories
  nameWithType: Category.Categories
  fullName: Scrapbook101core.Models.Category.Categories
- uid: List{Scrapbook101core.Models.CategoryItem}
  commentId: '!:List{Scrapbook101core.Models.CategoryItem}'
  definition: List`1
  name: List<CategoryItem>
  nameWithType: List<CategoryItem>
  fullName: List<Scrapbook101core.Models.CategoryItem>
  nameWithType.vb: List(Of CategoryItem)
  fullName.vb: List(Of Scrapbook101core.Models.CategoryItem)
  name.vb: List(Of CategoryItem)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.CategoryItem
    name: CategoryItem
    nameWithType: CategoryItem
    fullName: Scrapbook101core.Models.CategoryItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.CategoryItem
    name: CategoryItem
    nameWithType: CategoryItem
    fullName: Scrapbook101core.Models.CategoryItem
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
