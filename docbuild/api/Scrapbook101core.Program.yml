### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Program
  commentId: T:Scrapbook101core.Program
  id: Program
  parent: Scrapbook101core
  children:
  - Scrapbook101core.Program.CreateWebHostBuilder(System.String[])
  - Scrapbook101core.Program.Main(System.String[])
  langs:
  - csharp
  - vb
  name: Program
  nameWithType: Program
  fullName: Scrapbook101core.Program
  type: Class
  source:
    remote:
      path: Scrapbook101core/Program.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Program
    path: ../Scrapbook101core/Program.cs
    startLine: 22
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core
  summary: "\nDefines the entry point into the Scrapbook ASP.NET Core web application. \nASP.NET core apps configure and launch a host. The host is responsible for the app startup\nand lifetime management. For more information,  \n<a href=\"https://docs.microsoft.com/aspnet/core/fundamentals/host/web-host?view=aspnetcore-3.0\">ASP.NET Core Web Host</a>.\n"
  remarks: "\nProgram remarks.\n"
  example: []
  syntax:
    content: public class Program
    content.vb: Public Class Program
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Program.Main(System.String[])
  commentId: M:Scrapbook101core.Program.Main(System.String[])
  id: Main(System.String[])
  parent: Scrapbook101core.Program
  langs:
  - csharp
  - vb
  name: Main(String[])
  nameWithType: Program.Main(String[])
  fullName: Scrapbook101core.Program.Main(System.String[])
  type: Method
  source:
    remote:
      path: Scrapbook101core/Program.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Main
    path: ../Scrapbook101core/Program.cs
    startLine: 28
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core
  summary: "\nDefines the entry point into the C# application. This is the first method invoked.\n"
  example: []
  syntax:
    content: public static void Main(string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: An optional array of arguments to pass to the program.
    content.vb: Public Shared Sub Main(args As String())
  overload: Scrapbook101core.Program.Main*
  nameWithType.vb: Program.Main(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Scrapbook101core.Program.Main(System.String())
  name.vb: Main(String())
- uid: Scrapbook101core.Program.CreateWebHostBuilder(System.String[])
  commentId: M:Scrapbook101core.Program.CreateWebHostBuilder(System.String[])
  id: CreateWebHostBuilder(System.String[])
  parent: Scrapbook101core.Program
  langs:
  - csharp
  - vb
  name: CreateWebHostBuilder(String[])
  nameWithType: Program.CreateWebHostBuilder(String[])
  fullName: Scrapbook101core.Program.CreateWebHostBuilder(System.String[])
  type: Method
  source:
    remote:
      path: Scrapbook101core/Program.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CreateWebHostBuilder
    path: ../Scrapbook101core/Program.cs
    startLine: 39
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core
  summary: "\nIn the pattern used here, this method creates a builder object. For more information, see\n<a href=\"https://docs.microsoft.com/aspnet/core/fundamentals/host/web-host?view=aspnetcore-2.2\">ASP.NET Core Web Host</a>.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder CreateWebHostBuilder(string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: An optional array of arguments to pass to the builder.
    return:
      type: IWebHostBuilder
      description: ''
    content.vb: Public Shared Function CreateWebHostBuilder(args As String()) As IWebHostBuilder
  overload: Scrapbook101core.Program.CreateWebHostBuilder*
  nameWithType.vb: Program.CreateWebHostBuilder(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Scrapbook101core.Program.CreateWebHostBuilder(System.String())
  name.vb: CreateWebHostBuilder(String())
references:
- uid: Scrapbook101core
  commentId: N:Scrapbook101core
  name: Scrapbook101core
  nameWithType: Scrapbook101core
  fullName: Scrapbook101core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Scrapbook101core.Program.Main*
  commentId: Overload:Scrapbook101core.Program.Main
  name: Main
  nameWithType: Program.Main
  fullName: Scrapbook101core.Program.Main
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Scrapbook101core.Program.CreateWebHostBuilder*
  commentId: Overload:Scrapbook101core.Program.CreateWebHostBuilder
  name: CreateWebHostBuilder
  nameWithType: Program.CreateWebHostBuilder
  fullName: Scrapbook101core.Program.CreateWebHostBuilder
- uid: IWebHostBuilder
  commentId: '!:IWebHostBuilder'
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: IWebHostBuilder
