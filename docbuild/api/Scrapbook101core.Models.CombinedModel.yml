### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Models.CombinedModel
  commentId: T:Scrapbook101core.Models.CombinedModel
  id: CombinedModel
  parent: Scrapbook101core.Models
  children:
  - Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  - Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  - Scrapbook101core.Models.CombinedModel.Item
  - Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  - Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  langs:
  - csharp
  - vb
  name: CombinedModel
  nameWithType: CombinedModel
  fullName: Scrapbook101core.Models.CombinedModel
  type: Class
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CombinedModel
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 13
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  summary: "\nRepresents a MVC convenience model for display purposes in some view pages.\n"
  remarks: "\nThis model combine the <xref href=\"Scrapbook101core.Models.Item\" data-throw-if-not-resolved=\"false\"></xref> class/model with \nlists of categories and lists of files that are useful for pages that require both\nthe Item class and category and file support.\n"
  example: []
  syntax:
    content: public class CombinedModel
    content.vb: Public Class CombinedModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Models.CombinedModel.Item
  commentId: P:Scrapbook101core.Models.CombinedModel.Item
  id: Item
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: CombinedModel.Item
  fullName: Scrapbook101core.Models.CombinedModel.Item
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: Item
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 15
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public Item Item { get; set; }
    parameters: []
    return:
      type: Scrapbook101core.Models.Item
    content.vb: Public Property Item As Item
  overload: Scrapbook101core.Models.CombinedModel.Item*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  commentId: P:Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  id: CategoryItemsForDisplay
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: CategoryItemsForDisplay
  nameWithType: CombinedModel.CategoryItemsForDisplay
  fullName: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CategoryItemsForDisplay
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 17
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<CategoryItemDisplay> CategoryItemsForDisplay { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Scrapbook101core.Models.CategoryItemDisplay}
    content.vb: Public Property CategoryItemsForDisplay As List(Of CategoryItemDisplay)
  overload: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  commentId: P:Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  id: CategoryFieldMappingList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: CategoryFieldMappingList
  nameWithType: CombinedModel.CategoryFieldMappingList
  fullName: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CategoryFieldMappingList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 18
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<CategoryFieldMapping> CategoryFieldMappingList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Scrapbook101core.Models.CategoryFieldMapping}
    content.vb: Public Property CategoryFieldMappingList As List(Of CategoryFieldMapping)
  overload: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  commentId: P:Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  id: LocalUploadFileList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: LocalUploadFileList
  nameWithType: CombinedModel.LocalUploadFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: LocalUploadFileList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 19
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<FileItem> LocalUploadFileList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Scrapbook101core.Models.FileItem}
    content.vb: Public Property LocalUploadFileList As List(Of FileItem)
  overload: Scrapbook101core.Models.CombinedModel.LocalUploadFileList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  commentId: P:Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  id: LocalHttpPostedFileList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: LocalHttpPostedFileList
  nameWithType: CombinedModel.LocalHttpPostedFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: main
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: LocalHttpPostedFileList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 20
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<IFormFile> LocalHttpPostedFileList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile}
    content.vb: Public Property LocalHttpPostedFileList As List(Of IFormFile)
  overload: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Models.Item
  commentId: T:Scrapbook101core.Models.Item
  parent: Scrapbook101core.Models
  name: Item
  nameWithType: Item
  fullName: Scrapbook101core.Models.Item
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Scrapbook101core.Models.CombinedModel.Item*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.Item
  name: Item
  nameWithType: CombinedModel.Item
  fullName: Scrapbook101core.Models.CombinedModel.Item
- uid: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  name: CategoryItemsForDisplay
  nameWithType: CombinedModel.CategoryItemsForDisplay
  fullName: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
- uid: System.Collections.Generic.List{Scrapbook101core.Models.CategoryItemDisplay}
  commentId: T:System.Collections.Generic.List{Scrapbook101core.Models.CategoryItemDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CategoryItemDisplay>
  nameWithType: List<CategoryItemDisplay>
  fullName: System.Collections.Generic.List<Scrapbook101core.Models.CategoryItemDisplay>
  nameWithType.vb: List(Of CategoryItemDisplay)
  fullName.vb: System.Collections.Generic.List(Of Scrapbook101core.Models.CategoryItemDisplay)
  name.vb: List(Of CategoryItemDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.CategoryItemDisplay
    name: CategoryItemDisplay
    nameWithType: CategoryItemDisplay
    fullName: Scrapbook101core.Models.CategoryItemDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.CategoryItemDisplay
    name: CategoryItemDisplay
    nameWithType: CategoryItemDisplay
    fullName: Scrapbook101core.Models.CategoryItemDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  name: CategoryFieldMappingList
  nameWithType: CombinedModel.CategoryFieldMappingList
  fullName: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
- uid: System.Collections.Generic.List{Scrapbook101core.Models.CategoryFieldMapping}
  commentId: T:System.Collections.Generic.List{Scrapbook101core.Models.CategoryFieldMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CategoryFieldMapping>
  nameWithType: List<CategoryFieldMapping>
  fullName: System.Collections.Generic.List<Scrapbook101core.Models.CategoryFieldMapping>
  nameWithType.vb: List(Of CategoryFieldMapping)
  fullName.vb: System.Collections.Generic.List(Of Scrapbook101core.Models.CategoryFieldMapping)
  name.vb: List(Of CategoryFieldMapping)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.CategoryFieldMapping
    name: CategoryFieldMapping
    nameWithType: CategoryFieldMapping
    fullName: Scrapbook101core.Models.CategoryFieldMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.CategoryFieldMapping
    name: CategoryFieldMapping
    nameWithType: CategoryFieldMapping
    fullName: Scrapbook101core.Models.CategoryFieldMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: Scrapbook101core.Models.CombinedModel.LocalUploadFileList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  name: LocalUploadFileList
  nameWithType: CombinedModel.LocalUploadFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
- uid: System.Collections.Generic.List{Scrapbook101core.Models.FileItem}
  commentId: T:System.Collections.Generic.List{Scrapbook101core.Models.FileItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FileItem>
  nameWithType: List<FileItem>
  fullName: System.Collections.Generic.List<Scrapbook101core.Models.FileItem>
  nameWithType.vb: List(Of FileItem)
  fullName.vb: System.Collections.Generic.List(Of Scrapbook101core.Models.FileItem)
  name.vb: List(Of FileItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.FileItem
    name: FileItem
    nameWithType: FileItem
    fullName: Scrapbook101core.Models.FileItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.FileItem
    name: FileItem
    nameWithType: FileItem
    fullName: Scrapbook101core.Models.FileItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  name: LocalHttpPostedFileList
  nameWithType: CombinedModel.LocalHttpPostedFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IFormFile>
  nameWithType: List<IFormFile>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.Http.IFormFile>
  nameWithType.vb: List(Of IFormFile)
  fullName.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.Http.IFormFile)
  name.vb: List(Of IFormFile)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
