### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Models.CombinedModel
  commentId: T:Scrapbook101core.Models.CombinedModel
  id: CombinedModel
  parent: Scrapbook101core.Models
  children:
  - Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  - Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  - Scrapbook101core.Models.CombinedModel.Item
  - Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  - Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  langs:
  - csharp
  - vb
  name: CombinedModel
  nameWithType: CombinedModel
  fullName: Scrapbook101core.Models.CombinedModel
  type: Class
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: CombinedModel
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 13
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  summary: "\nRepresents a MVC convenience model for display purposes in some view pages.\n"
  remarks: "\nThis model combine the <xref href=\"Scrapbook101core.Models.Item\" data-throw-if-not-resolved=\"false\"></xref> class/model with \nlists of categories and lists of files that are useful for pages that require both\nthe Item class and category and file support.\n"
  example: []
  syntax:
    content: 'public class CombinedModel : object'
    content.vb: >-
      Public Class CombinedModel
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Models.CombinedModel.Item
  commentId: P:Scrapbook101core.Models.CombinedModel.Item
  id: Item
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: CombinedModel.Item
  fullName: Scrapbook101core.Models.CombinedModel.Item
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Item
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 15
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public Item Item { get; set; }
    parameters: []
    return:
      type: Scrapbook101core.Models.Item
    content.vb: Public Property Item As Item
  overload: Scrapbook101core.Models.CombinedModel.Item*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  commentId: P:Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  id: CategoryItemsForDisplay
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: CategoryItemsForDisplay
  nameWithType: CombinedModel.CategoryItemsForDisplay
  fullName: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: CategoryItemsForDisplay
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 17
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<CategoryItemDisplay> CategoryItemsForDisplay { get; set; }
    parameters: []
    return:
      type: List{Scrapbook101core.Models.CategoryItemDisplay}
    content.vb: Public Property CategoryItemsForDisplay As List(Of CategoryItemDisplay)
  overload: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  commentId: P:Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  id: CategoryFieldMappingList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: CategoryFieldMappingList
  nameWithType: CombinedModel.CategoryFieldMappingList
  fullName: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: CategoryFieldMappingList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 18
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<CategoryFieldMapping> CategoryFieldMappingList { get; set; }
    parameters: []
    return:
      type: List{Scrapbook101core.Models.CategoryFieldMapping}
    content.vb: Public Property CategoryFieldMappingList As List(Of CategoryFieldMapping)
  overload: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  commentId: P:Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  id: LocalUploadFileList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: LocalUploadFileList
  nameWithType: CombinedModel.LocalUploadFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: LocalUploadFileList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 19
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<FileItem> LocalUploadFileList { get; set; }
    parameters: []
    return:
      type: List{Scrapbook101core.Models.FileItem}
    content.vb: Public Property LocalUploadFileList As List(Of FileItem)
  overload: Scrapbook101core.Models.CombinedModel.LocalUploadFileList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  commentId: P:Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  id: LocalHttpPostedFileList
  parent: Scrapbook101core.Models.CombinedModel
  langs:
  - csharp
  - vb
  name: LocalHttpPostedFileList
  nameWithType: CombinedModel.LocalHttpPostedFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: LocalHttpPostedFileList
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 20
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<IFormFile> LocalHttpPostedFileList { get; set; }
    parameters: []
    return:
      type: List{IFormFile}
    content.vb: Public Property LocalHttpPostedFileList As List(Of IFormFile)
  overload: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Models.Item
  commentId: T:Scrapbook101core.Models.Item
  parent: Scrapbook101core.Models
  name: Item
  nameWithType: Item
  fullName: Scrapbook101core.Models.Item
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Scrapbook101core.Models.CombinedModel.Item*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.Item
  name: Item
  nameWithType: CombinedModel.Item
  fullName: Scrapbook101core.Models.CombinedModel.Item
- uid: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
  name: CategoryItemsForDisplay
  nameWithType: CombinedModel.CategoryItemsForDisplay
  fullName: Scrapbook101core.Models.CombinedModel.CategoryItemsForDisplay
- uid: List{Scrapbook101core.Models.CategoryItemDisplay}
  commentId: '!:List{Scrapbook101core.Models.CategoryItemDisplay}'
  definition: List`1
  name: List<CategoryItemDisplay>
  nameWithType: List<CategoryItemDisplay>
  fullName: List<Scrapbook101core.Models.CategoryItemDisplay>
  nameWithType.vb: List(Of CategoryItemDisplay)
  fullName.vb: List(Of Scrapbook101core.Models.CategoryItemDisplay)
  name.vb: List(Of CategoryItemDisplay)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.CategoryItemDisplay
    name: CategoryItemDisplay
    nameWithType: CategoryItemDisplay
    fullName: Scrapbook101core.Models.CategoryItemDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.CategoryItemDisplay
    name: CategoryItemDisplay
    nameWithType: CategoryItemDisplay
    fullName: Scrapbook101core.Models.CategoryItemDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
  name: CategoryFieldMappingList
  nameWithType: CombinedModel.CategoryFieldMappingList
  fullName: Scrapbook101core.Models.CombinedModel.CategoryFieldMappingList
- uid: List{Scrapbook101core.Models.CategoryFieldMapping}
  commentId: '!:List{Scrapbook101core.Models.CategoryFieldMapping}'
  definition: List`1
  name: List<CategoryFieldMapping>
  nameWithType: List<CategoryFieldMapping>
  fullName: List<Scrapbook101core.Models.CategoryFieldMapping>
  nameWithType.vb: List(Of CategoryFieldMapping)
  fullName.vb: List(Of Scrapbook101core.Models.CategoryFieldMapping)
  name.vb: List(Of CategoryFieldMapping)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.CategoryFieldMapping
    name: CategoryFieldMapping
    nameWithType: CategoryFieldMapping
    fullName: Scrapbook101core.Models.CategoryFieldMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.CategoryFieldMapping
    name: CategoryFieldMapping
    nameWithType: CategoryFieldMapping
    fullName: Scrapbook101core.Models.CategoryFieldMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: Scrapbook101core.Models.CombinedModel.LocalUploadFileList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.LocalUploadFileList
  name: LocalUploadFileList
  nameWithType: CombinedModel.LocalUploadFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalUploadFileList
- uid: List{Scrapbook101core.Models.FileItem}
  commentId: '!:List{Scrapbook101core.Models.FileItem}'
  definition: List`1
  name: List<FileItem>
  nameWithType: List<FileItem>
  fullName: List<Scrapbook101core.Models.FileItem>
  nameWithType.vb: List(Of FileItem)
  fullName.vb: List(Of Scrapbook101core.Models.FileItem)
  name.vb: List(Of FileItem)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Scrapbook101core.Models.FileItem
    name: FileItem
    nameWithType: FileItem
    fullName: Scrapbook101core.Models.FileItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Scrapbook101core.Models.FileItem
    name: FileItem
    nameWithType: FileItem
    fullName: Scrapbook101core.Models.FileItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList*
  commentId: Overload:Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
  name: LocalHttpPostedFileList
  nameWithType: CombinedModel.LocalHttpPostedFileList
  fullName: Scrapbook101core.Models.CombinedModel.LocalHttpPostedFileList
- uid: List{IFormFile}
  commentId: '!:List{IFormFile}'
  definition: List`1
  name: List<IFormFile>
  nameWithType: List<IFormFile>
  fullName: List<IFormFile>
  nameWithType.vb: List(Of IFormFile)
  fullName.vb: List(Of IFormFile)
  name.vb: List(Of IFormFile)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: IFormFile
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: IFormFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
