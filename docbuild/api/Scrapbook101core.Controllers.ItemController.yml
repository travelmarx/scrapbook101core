### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Controllers.ItemController
  commentId: T:Scrapbook101core.Controllers.ItemController
  id: ItemController
  parent: Scrapbook101core.Controllers
  children:
  - Scrapbook101core.Controllers.ItemController.#ctor(IWebHostEnvironment)
  - Scrapbook101core.Controllers.ItemController.CreateAsync
  - Scrapbook101core.Controllers.ItemController.CreateAsync(Scrapbook101core.Models.CombinedModel)
  - Scrapbook101core.Controllers.ItemController.DeleteAsync(System.String)
  - Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync(System.String)
  - Scrapbook101core.Controllers.ItemController.DetailsAsync(System.String)
  - Scrapbook101core.Controllers.ItemController.EditAsync(Scrapbook101core.Models.CombinedModel)
  - Scrapbook101core.Controllers.ItemController.EditAsync(System.String)
  - Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  langs:
  - csharp
  - vb
  name: ItemController
  nameWithType: ItemController
  fullName: Scrapbook101core.Controllers.ItemController
  type: Class
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: ItemController
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 17
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  summary: "\nIn the Model-View-Controller pattern, the controller processes the input. In this case, it is all the input involving\nitem operations. The most important method is the\n<xref href=\"Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, which\nreturns a list of items.\n"
  example: []
  syntax:
    content: 'public class ItemController : Controller'
    content.vb: >-
      Public Class ItemController
          Inherits Controller
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Controllers.ItemController.#ctor(IWebHostEnvironment)
  commentId: M:Scrapbook101core.Controllers.ItemController.#ctor(IWebHostEnvironment)
  id: '#ctor(IWebHostEnvironment)'
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: ItemController(IWebHostEnvironment)
  nameWithType: ItemController.ItemController(IWebHostEnvironment)
  fullName: Scrapbook101core.Controllers.ItemController.ItemController(IWebHostEnvironment)
  type: Constructor
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: .ctor
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 21
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public ItemController(IWebHostEnvironment hostingEnvironment)
    parameters:
    - id: hostingEnvironment
      type: IWebHostEnvironment
    content.vb: Public Sub New(hostingEnvironment As IWebHostEnvironment)
  overload: Scrapbook101core.Controllers.ItemController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  id: IndexAsync(System.String)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: IndexAsync(String)
  nameWithType: ItemController.IndexAsync(String)
  fullName: Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: IndexAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 26
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> IndexAsync(string filter)
    parameters:
    - id: filter
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function IndexAsync(filter As String) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.IndexAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.DetailsAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.DetailsAsync(System.String)
  id: DetailsAsync(System.String)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: DetailsAsync(String)
  nameWithType: ItemController.DetailsAsync(String)
  fullName: Scrapbook101core.Controllers.ItemController.DetailsAsync(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: DetailsAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 47
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> DetailsAsync(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function DetailsAsync(id As String) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.DetailsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.CreateAsync
  commentId: M:Scrapbook101core.Controllers.ItemController.CreateAsync
  id: CreateAsync
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: CreateAsync()
  nameWithType: ItemController.CreateAsync()
  fullName: Scrapbook101core.Controllers.ItemController.CreateAsync()
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CreateAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 61
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> CreateAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function CreateAsync As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.CreateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.CreateAsync(Scrapbook101core.Models.CombinedModel)
  commentId: M:Scrapbook101core.Controllers.ItemController.CreateAsync(Scrapbook101core.Models.CombinedModel)
  id: CreateAsync(Scrapbook101core.Models.CombinedModel)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: CreateAsync(CombinedModel)
  nameWithType: ItemController.CreateAsync(CombinedModel)
  fullName: Scrapbook101core.Controllers.ItemController.CreateAsync(Scrapbook101core.Models.CombinedModel)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: CreateAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 78
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> CreateAsync(CombinedModel combinedModel)
    parameters:
    - id: combinedModel
      type: Scrapbook101core.Models.CombinedModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function CreateAsync(combinedModel As CombinedModel) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.CreateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.EditAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.EditAsync(System.String)
  id: EditAsync(System.String)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: EditAsync(String)
  nameWithType: ItemController.EditAsync(String)
  fullName: Scrapbook101core.Controllers.ItemController.EditAsync(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: EditAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 136
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> EditAsync(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function EditAsync(id As String) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.EditAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.EditAsync(Scrapbook101core.Models.CombinedModel)
  commentId: M:Scrapbook101core.Controllers.ItemController.EditAsync(Scrapbook101core.Models.CombinedModel)
  id: EditAsync(Scrapbook101core.Models.CombinedModel)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: EditAsync(CombinedModel)
  nameWithType: ItemController.EditAsync(CombinedModel)
  fullName: Scrapbook101core.Controllers.ItemController.EditAsync(Scrapbook101core.Models.CombinedModel)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: EditAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 161
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> EditAsync(CombinedModel combinedModel)
    parameters:
    - id: combinedModel
      type: Scrapbook101core.Models.CombinedModel
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function EditAsync(combinedModel As CombinedModel) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.EditAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.DeleteAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: DeleteAsync(String)
  nameWithType: ItemController.DeleteAsync(String)
  fullName: Scrapbook101core.Controllers.ItemController.DeleteAsync(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: DeleteAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 185
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> DeleteAsync(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function DeleteAsync(id As String) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.DeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync(System.String)
  id: DeleteConfirmedAsync(System.String)
  parent: Scrapbook101core.Controllers.ItemController
  langs:
  - csharp
  - vb
  name: DeleteConfirmedAsync(String)
  nameWithType: ItemController.DeleteConfirmedAsync(String)
  fullName: Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync(System.String)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Controllers/ItemController.cs
      branch: working
      repo: https://github.com/travelmarx/scrapbook101core.git
    id: DeleteConfirmedAsync
    path: ../Scrapbook101core/Controllers/ItemController.cs
    startLine: 203
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Controllers
  syntax:
    content: public Task<ActionResult> DeleteConfirmedAsync(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: Public Function DeleteConfirmedAsync(id As String) As Task(Of ActionResult)
  overload: Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  commentId: M:Scrapbook101core.Controllers.ItemController.IndexAsync(System.String)
  isExternal: true
- uid: Scrapbook101core.Controllers
  commentId: N:Scrapbook101core.Controllers
  name: Scrapbook101core.Controllers
  nameWithType: Scrapbook101core.Controllers
  fullName: Scrapbook101core.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Scrapbook101core.Controllers.ItemController.#ctor*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.#ctor
  name: ItemController
  nameWithType: ItemController.ItemController
  fullName: Scrapbook101core.Controllers.ItemController.ItemController
- uid: IWebHostEnvironment
  isExternal: true
  name: IWebHostEnvironment
  nameWithType: IWebHostEnvironment
  fullName: IWebHostEnvironment
- uid: Scrapbook101core.Controllers.ItemController.IndexAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.IndexAsync
  name: IndexAsync
  nameWithType: ItemController.IndexAsync
  fullName: Scrapbook101core.Controllers.ItemController.IndexAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.ActionResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ActionResult>
  nameWithType: Task<ActionResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.ActionResult>
  nameWithType.vb: Task(Of ActionResult)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Mvc.ActionResult)
  name.vb: Task(Of ActionResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ActionResult
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Scrapbook101core.Controllers.ItemController.DetailsAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.DetailsAsync
  name: DetailsAsync
  nameWithType: ItemController.DetailsAsync
  fullName: Scrapbook101core.Controllers.ItemController.DetailsAsync
- uid: Scrapbook101core.Controllers.ItemController.CreateAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.CreateAsync
  name: CreateAsync
  nameWithType: ItemController.CreateAsync
  fullName: Scrapbook101core.Controllers.ItemController.CreateAsync
- uid: Scrapbook101core.Models.CombinedModel
  commentId: T:Scrapbook101core.Models.CombinedModel
  parent: Scrapbook101core.Models
  name: CombinedModel
  nameWithType: CombinedModel
  fullName: Scrapbook101core.Models.CombinedModel
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: Scrapbook101core.Controllers.ItemController.EditAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.EditAsync
  name: EditAsync
  nameWithType: ItemController.EditAsync
  fullName: Scrapbook101core.Controllers.ItemController.EditAsync
- uid: Scrapbook101core.Controllers.ItemController.DeleteAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.DeleteAsync
  name: DeleteAsync
  nameWithType: ItemController.DeleteAsync
  fullName: Scrapbook101core.Controllers.ItemController.DeleteAsync
- uid: Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync*
  commentId: Overload:Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync
  name: DeleteConfirmedAsync
  nameWithType: ItemController.DeleteConfirmedAsync
  fullName: Scrapbook101core.Controllers.ItemController.DeleteConfirmedAsync
