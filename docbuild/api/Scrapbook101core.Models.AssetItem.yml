### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Models.AssetItem
  commentId: T:Scrapbook101core.Models.AssetItem
  id: AssetItem
  parent: Scrapbook101core.Models
  children:
  - Scrapbook101core.Models.AssetItem.CompareTo(Scrapbook101core.Models.AssetItem)
  - Scrapbook101core.Models.AssetItem.Equals(Scrapbook101core.Models.AssetItem)
  - Scrapbook101core.Models.AssetItem.Equals(System.Object)
  - Scrapbook101core.Models.AssetItem.GetHashCode
  - Scrapbook101core.Models.AssetItem.Name
  - Scrapbook101core.Models.AssetItem.Size
  langs:
  - csharp
  - vb
  name: AssetItem
  nameWithType: AssetItem
  fullName: Scrapbook101core.Models.AssetItem
  type: Class
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: AssetItem
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 150
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  summary: "\nDefines one asset in the <xref href=\"Scrapbook101core.Models.Item.Assets\" data-throw-if-not-resolved=\"false\"></xref> property of \nthe <xref href=\"Scrapbook101core.Models.Item\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: 'public class AssetItem : IComparable<AssetItem>'
    content.vb: >-
      Public Class AssetItem
          Inherits IComparable(Of AssetItem)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Models.AssetItem.Name
  commentId: P:Scrapbook101core.Models.AssetItem.Name
  id: Name
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AssetItem.Name
  fullName: Scrapbook101core.Models.AssetItem.Name
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Name
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 152
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Scrapbook101core.Models.AssetItem.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.AssetItem.Size
  commentId: P:Scrapbook101core.Models.AssetItem.Size
  id: Size
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: AssetItem.Size
  fullName: Scrapbook101core.Models.AssetItem.Size
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Size
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 155
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public string Size { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Size As String
  overload: Scrapbook101core.Models.AssetItem.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.AssetItem.Equals(Scrapbook101core.Models.AssetItem)
  commentId: M:Scrapbook101core.Models.AssetItem.Equals(Scrapbook101core.Models.AssetItem)
  id: Equals(Scrapbook101core.Models.AssetItem)
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: Equals(AssetItem)
  nameWithType: AssetItem.Equals(AssetItem)
  fullName: Scrapbook101core.Models.AssetItem.Equals(Scrapbook101core.Models.AssetItem)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Equals
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 158
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public bool Equals(AssetItem other)
    parameters:
    - id: other
      type: Scrapbook101core.Models.AssetItem
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AssetItem) As Boolean
  overload: Scrapbook101core.Models.AssetItem.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.AssetItem.Equals(System.Object)
  commentId: M:Scrapbook101core.Models.AssetItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AssetItem.Equals(Object)
  fullName: Scrapbook101core.Models.AssetItem.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Equals
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 163
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: Scrapbook101core.Models.AssetItem.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Scrapbook101core.Models.AssetItem.GetHashCode
  commentId: M:Scrapbook101core.Models.AssetItem.GetHashCode
  id: GetHashCode
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AssetItem.GetHashCode()
  fullName: Scrapbook101core.Models.AssetItem.GetHashCode()
  type: Method
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: GetHashCode
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 170
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Scrapbook101core.Models.AssetItem.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Scrapbook101core.Models.AssetItem.CompareTo(Scrapbook101core.Models.AssetItem)
  commentId: M:Scrapbook101core.Models.AssetItem.CompareTo(Scrapbook101core.Models.AssetItem)
  id: CompareTo(Scrapbook101core.Models.AssetItem)
  parent: Scrapbook101core.Models.AssetItem
  langs:
  - csharp
  - vb
  name: CompareTo(AssetItem)
  nameWithType: AssetItem.CompareTo(AssetItem)
  fullName: Scrapbook101core.Models.AssetItem.CompareTo(Scrapbook101core.Models.AssetItem)
  type: Method
  source:
    remote:
      path: Scrapbook101core/Models/Item.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: CompareTo
    path: ../Scrapbook101core/Models/Item.cs
    startLine: 174
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public int CompareTo(AssetItem other)
    parameters:
    - id: other
      type: Scrapbook101core.Models.AssetItem
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As AssetItem) As Integer
  overload: Scrapbook101core.Models.AssetItem.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Models.Item.Assets
  commentId: P:Scrapbook101core.Models.Item.Assets
  isExternal: true
- uid: Scrapbook101core.Models.Item
  commentId: T:Scrapbook101core.Models.Item
  parent: Scrapbook101core.Models
  name: Item
  nameWithType: Item
  fullName: Scrapbook101core.Models.Item
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Scrapbook101core.Models.AssetItem.Name*
  commentId: Overload:Scrapbook101core.Models.AssetItem.Name
  name: Name
  nameWithType: AssetItem.Name
  fullName: Scrapbook101core.Models.AssetItem.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Scrapbook101core.Models.AssetItem.Size*
  commentId: Overload:Scrapbook101core.Models.AssetItem.Size
  name: Size
  nameWithType: AssetItem.Size
  fullName: Scrapbook101core.Models.AssetItem.Size
- uid: Scrapbook101core.Models.AssetItem.Equals*
  commentId: Overload:Scrapbook101core.Models.AssetItem.Equals
  name: Equals
  nameWithType: AssetItem.Equals
  fullName: Scrapbook101core.Models.AssetItem.Equals
- uid: Scrapbook101core.Models.AssetItem
  commentId: T:Scrapbook101core.Models.AssetItem
  parent: Scrapbook101core.Models
  name: AssetItem
  nameWithType: AssetItem
  fullName: Scrapbook101core.Models.AssetItem
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Scrapbook101core.Models.AssetItem.GetHashCode*
  commentId: Overload:Scrapbook101core.Models.AssetItem.GetHashCode
  name: GetHashCode
  nameWithType: AssetItem.GetHashCode
  fullName: Scrapbook101core.Models.AssetItem.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Scrapbook101core.Models.AssetItem.CompareTo*
  commentId: Overload:Scrapbook101core.Models.AssetItem.CompareTo
  name: CompareTo
  nameWithType: AssetItem.CompareTo
  fullName: Scrapbook101core.Models.AssetItem.CompareTo
