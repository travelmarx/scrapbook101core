### YamlMime:ManagedReference
items:
- uid: Scrapbook101core.Models.CategoryFieldMapping
  commentId: T:Scrapbook101core.Models.CategoryFieldMapping
  id: CategoryFieldMapping
  parent: Scrapbook101core.Models
  children:
  - Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
  - Scrapbook101core.Models.CategoryFieldMapping.Name
  langs:
  - csharp
  - vb
  name: CategoryFieldMapping
  nameWithType: CategoryFieldMapping
  fullName: Scrapbook101core.Models.CategoryFieldMapping
  type: Class
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: CategoryFieldMapping
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 36
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  summary: "\nUsed for tracking what fields are valid for a category. Not used to deserialize JSON.\n"
  example: []
  syntax:
    content: 'public class CategoryFieldMapping : object'
    content.vb: >-
      Public Class CategoryFieldMapping
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Scrapbook101core.Models.CategoryFieldMapping.Name
  commentId: P:Scrapbook101core.Models.CategoryFieldMapping.Name
  id: Name
  parent: Scrapbook101core.Models.CategoryFieldMapping
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CategoryFieldMapping.Name
  fullName: Scrapbook101core.Models.CategoryFieldMapping.Name
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: Name
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 38
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Scrapbook101core.Models.CategoryFieldMapping.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
  commentId: P:Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
  id: ActiveFields
  parent: Scrapbook101core.Models.CategoryFieldMapping
  langs:
  - csharp
  - vb
  name: ActiveFields
  nameWithType: CategoryFieldMapping.ActiveFields
  fullName: Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
  type: Property
  source:
    remote:
      path: Scrapbook101core/Models/CombinedModel.cs
      branch: master
      repo: https://github.com/travelmarx/scrapbook101core
    id: ActiveFields
    path: ../Scrapbook101core/Models/CombinedModel.cs
    startLine: 39
  assemblies:
  - Scrapbook101core
  namespace: Scrapbook101core.Models
  syntax:
    content: public List<string> ActiveFields { get; set; }
    parameters: []
    return:
      type: List{System.String}
    content.vb: Public Property ActiveFields As List(Of String)
  overload: Scrapbook101core.Models.CategoryFieldMapping.ActiveFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Scrapbook101core.Models
  commentId: N:Scrapbook101core.Models
  name: Scrapbook101core.Models
  nameWithType: Scrapbook101core.Models
  fullName: Scrapbook101core.Models
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Scrapbook101core.Models.CategoryFieldMapping.Name*
  commentId: Overload:Scrapbook101core.Models.CategoryFieldMapping.Name
  name: Name
  nameWithType: CategoryFieldMapping.Name
  fullName: Scrapbook101core.Models.CategoryFieldMapping.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Scrapbook101core.Models.CategoryFieldMapping.ActiveFields*
  commentId: Overload:Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
  name: ActiveFields
  nameWithType: CategoryFieldMapping.ActiveFields
  fullName: Scrapbook101core.Models.CategoryFieldMapping.ActiveFields
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
