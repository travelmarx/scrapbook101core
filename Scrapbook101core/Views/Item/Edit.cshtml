@model Scrapbook101core.Models.CombinedModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Item</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Item.Id" class="control-label"></label>
                <input asp-for="Item.Id" class="form-control" readonly/>
            </div>
            <div class="form-group">
                <label asp-for="Item.Type" class="control-label"></label>
                <input asp-for="Item.Type" class="form-control" readonly/>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Item.AssetPath" class="control-label"></label>
                <input asp-for="Item.AssetPath" class="form-control" />
                <span asp-validation-for="Item.AssetPath" class="text-danger"></span>
            </div>

            <div class="form-group second-level-json">
                <label asp-for="Item.Assets" class="control-label"></label>
                <div class="col-md-10">
                    @{
                        if (Model.Item.Assets != null)
                        {
                            int i = 0;
                            foreach (var asset in Model.Item.Assets)
                            {
                                <input asp-for="Item.Assets[i].Name" class="form-control" readonly />
                                <input asp-for="Item.Assets[i].Size" class="form-control" readonly />
                                <input type='checkbox' name='FilesToRemove' value='@asset.Name' />
                                <span>Delete</span>
                                i++;
                            }
                        }
                    }
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Item.Category" class="control-label"></label>
                <select asp-for="Item.Category" asp-items="@(new SelectList(Model.CategoryItemsForDisplay,"Id","Name", Model.CategoryItemsForDisplay[0]))"></select>
                <span asp-validation-for="Item.Category" class="text-danger"></span>
            </div>

            <div class="form-group second-level-json">
                <div class="col-md-10" id="categoryFieldsContainer">
                    @{
                        var activeFields = Model.CategoryFieldMappingList.First(x => string.Compare(x.Name, Model.Item.Category, true) == 0).ActiveFields;
                        foreach (var field in activeFields)
                        {
                            string val = "";
                            if (Model.Item.CategoryFields != null)
                            {
                                val = Model.Item.CategoryFields[field] == null ? "" : Model.Item.CategoryFields[field].ToString();
                            }
                            <label asp-for="Item.CategoryFields[field]" style="color:blue"></label>
                            <label asp-for="Item.CategoryFields[field]" class="form-control"></label>
                            <br/>
                        }
                    }
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Item.DateAdded" class="control-label"></label>
                <input asp-for="Item.DateAdded" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Item.DateUpdated" class="control-label"></label>
                <input asp-for="Item.DateUpdated" class="form-control" readonly/>
            </div>

            <div class="form-group">
                <label asp-for="Item.Description" class="control-label"></label>
                <input asp-for="Item.Description" class="form-control" />
                <span asp-validation-for="Item.Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Item.Location" class="control-label"></label>
                <input asp-for="Item.Location" class="form-control" />
                <span asp-validation-for="Item.Location" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Item.Rating" class="control-label"></label>
                <input asp-for="Item.Rating" class="form-control" />
                <span asp-validation-for="Item.Rating" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Item.UpdatedBy" class="control-label"></label>
                <input asp-for="Item.UpdatedBy" class="form-control" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Item.Title" class="control-label"></label>
                <input asp-for="Item.Title" class="form-control" />
                <span asp-validation-for="Item.Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $('#Item_Category').change(function () {

                /* Get the selected value of dropdownlist */
                var selectedID = $(this).val();

                /* Request the partial view with .get request. */
                $.get('/Category/GetCategoryFields?category=' + selectedID, function (data) {

                    /* data is the pure html returned from action method, load it to your page */
                    $('#categoryFieldsContainer').html(data);
                });
            });
        });
    </script>
}
